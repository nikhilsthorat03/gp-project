Resources:
  # Define an AWS Lambda function
  ETLLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      # Specify the name of the Lambda function
      FunctionName: test
      # Define the handler file and function entry point
      Handler: lambda_function.lambda_handler
      # Specify the runtime environment for the Lambda function
      Runtime: python3.9
      Role: arn:aws:iam::891612579745:role/etl-lambda-role-3eza6xnd
      # Define the source code location in an S3 bucket (CodePipeline artifacts)
      Code:
        S3Bucket: !Sub "${CodePipelineArtifactBucket}" # S3 bucket where the deployment package is stored
        S3Key: !Sub "${CodePipelineArtifactObjectKey}" # Object key for the Lambda deployment package
      # Set the maximum execution time (in seconds)
      Timeout: 10
  # Create an alias for the Lambda function to manage versions and traffic shifting
  LiveAlias:
    Type: AWS::Lambda::Alias
    Properties:
      # Reference the Lambda function created above
      FunctionName: !Ref ETLLambdaFunction
      # Set the alias to point to the latest deployed version
      FunctionVersion: !GetAtt ETLLambdaFunction.Version
      # Alias name is set to 'live'
      Name: live
